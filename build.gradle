buildscript {
    ext.kotlin_version = '1.8.0'
    ext.KOTLIN_BOM = "org.jetbrains.kotlin:kotlin-bom:${kotlin_version}"
    ext.SPACESHIP_BOM = 'it.scoppelletti.spaceship:spaceship-bom:1.1.0'

    repositories {
        gradlePluginPortal()
        mavenCentral()

        if (project.hasProperty('it.scoppelletti.spaceship.repository.url')) {
            maven {
                url project.property('it.scoppelletti.spaceship.repository.url')
            }
        }
    }
    dependencies {
        classpath platform(KOTLIN_BOM)
        classpath platform(SPACESHIP_BOM)
        classpath 'it.scoppelletti.spaceship:spaceship-gradle'
    }
}

plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.8.0'
    id 'java-gradle-plugin'
    id 'maven-publish'
    id 'com.github.ben-manes.versions' version '0.46.0'
    id 'com.google.devtools.ksp' version '1.8.0-1.0.8'
    id 'org.jetbrains.dokka' version '1.7.20'
}

apply plugin: 'it.scoppelletti.spaceship.java-library'

group 'it.scoppelletti.spaceship'
version '1.1.0'
description 'Spaceship Standard Library'
archivesBaseName = 'spaceship-stdlib'

spaceship {
    url = 'http://github.com/dscoppelletti/spaceship-stdlib'
    scmUrl = 'git@github.com:dscoppelletti/spaceship-stdlib.git'
    inceptionYear = '2017-2021'
}

kotlin {
    explicitApi()
    jvmToolchain(8)
}

repositories {
    mavenCentral()
    google()

    if (project.hasProperty('it.scoppelletti.spaceship.repository.url')) {
        maven {
            url project.property('it.scoppelletti.spaceship.repository.url')
        }
    }
}

configurations {
    bom
    api.extendsFrom(bom)
    ksp.extendsFrom(bom)
}

dependencies {
    bom platform(KOTLIN_BOM)
    bom platform(SPACESHIP_BOM)
    api 'com.google.dagger:dagger'
    ksp 'com.google.dagger:dagger-compiler'
    api 'com.squareup.moshi:moshi'
    ksp 'com.squareup.moshi:moshi-kotlin-codegen'
    api 'com.squareup.okhttp3:okhttp'
    api 'com.squareup.okio:okio'
    api 'org.jetbrains.kotlinx:kotlinx-coroutines-core'
    implementation 'io.github.microutils:kotlin-logging'
    implementation 'org.slf4j:slf4j-api'
    kspTest 'com.squareup.moshi:moshi-kotlin-codegen'
    testImplementation 'org.jetbrains.kotlin:kotlin-test'
    // Class path contains multiple SLF4J bindings.
    // Found binding in [gradle-api-7.5.jar!/org/slf4j/impl/StaticLoggerBinder.class]
    // Found binding in [slf4j-simple-1.7.36.jar!/org/slf4j/impl/StaticLoggerBinder.class]
    // Actual binding is of type [org.gradle.internal.logging.slf4j.OutputEventListenerBackedLoggerContext]
    // testRuntimeOnly 'org.slf4j:slf4j-simple'
}

test {
    useJUnitPlatform()
}
